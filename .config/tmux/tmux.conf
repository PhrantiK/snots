# -- general -------------------------------------------------------------------

# set -g default-terminal "xterm-kitty"
set -g default-terminal "tmux-256color"
# True Color support
set -ga terminal-overrides ",${TERM}:Tc"
set -as terminal-features ",${TERM}:Tc"

# Extended keys for xterm
set -as terminal-features 'xterm*:extkeys'

# Neovim cursor changing support
set -ga terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'

# Italics support
set -as terminal-overrides ',xterm*:sitm=\E[3m'

# Strikethrough support
set -as terminal-overrides ',xterm*:smxx=\E[9m'
set -ga terminal-features '*:clipboard:strikethrough:usstyle:RGB'

# Undercurl support
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'

# Colored underlines
set -a terminal-features '*:usstyle'
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'

#setw -g xterm-keys on
set -sg repeat-time 600                   # increase repeat timeout
set -s focus-events on
set -s set-clipboard on
set -sg escape-time 0
set -g allow-passthrough on

# -- display -------------------------------------------------------------------

set -g base-index 1           # start windows numbering at 1
setw -g pane-base-index 1     # make pane numbering consistent with windows
setw -g automatic-rename on   # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed
set -g set-titles on          # set terminal title
set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000    # slightly longer status messages display time
set -g status-interval 5     # redraw status line every 10 seconds
set-option -g set-titles-string "#H ❐ #S ● #I #W"
setw -q -g utf8 on        # charset

# activity
set -g monitor-activity on
set -g visual-activity off
set -g visual-bell off

# Use vi keybindings for tmux commandline input.
set -g status-keys vi
setw -g mode-keys vi

# mouse mode on
set -g mouse on

# -- plugins -------------------------------------------------------------------

set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'MunifTanjim/tmux-mode-indicator'
set -g @plugin 'MunifTanjim/tmux-suspend'
set -g @plugin 'phrantik/tmux-tilish'
set -g @plugin 'wfxr/tmux-fzf-url'
# set -g @plugin 'kenos1/tmux-cht-sh'


# -- plugin options ------------------------------------------------------------
set -g @tilish-default 'tiled'
set -g @tilish-dmenu 'on'

set -g @fzf-url-fzf-options '-w 80% -h 50% --multi -0 --no-preview'

set -g @tilish-layout_keys 'sSiItz'

# -- keybindings ---------------------------------------------------------------

unbind C-b
set -g prefix C-a                        # GNU-Screen compatible prefix
bind C-a send-prefix

# create session
bind C-c new-session

# find session
bind C-f command-prompt -p find-session 'switch-client -t %%'

# bind-key -T copy-mode-vi v send -X begin-selection

# -- plugin bindings -----------------------------------------------------------
set -g @fzf-url-bind 'x'
set -g @suspend_key 'F10'

bind-key -T prefix C-g popup \
  "$SHELL --login -i -c 'navi --print | head -n 1 | tmux load-buffer -b tmp - ; tmux paste-buffer -p -t {last} -b tmp -d'"
set -s extended-keys on

# -- navigation ----------------------------------------------------------------

# Smart pane switching with awareness of Vim splits and fzf.
# https://github.com/junegunn/fzf/pull/582#issuecomment-377731826

# not_tmux="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?(g?(view|n?vim?x?|ssh)(diff)?|fzf)$'"
not_tmux="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?(g?(view|n?vim?x?)(diff)?|fzf)$'"

# not_tmux="not_tmux '#{pane_tty}'"

bind-key -n C-h if "$not_tmux" { send-keys C-h } {
  if -F '#{==:#{pane_at_left},1}' {
    
  } {
    select-pane -LZ
  }
}

bind-key -n C-j if "$not_tmux" { send-keys C-j } {
  if -F '#{==:#{pane_at_bottom},1}' {
    
  } {
    select-pane -DZ
  }
}

bind-key -n C-k if "$not_tmux" { send-keys C-k } {
  if -F '#{==:#{pane_at_top},1}' {
    
  } {
    select-pane -UZ
  }
}
bind-key -n C-l if "$not_tmux" { send-keys C-l } {
  if -F '#{==:#{pane_at_right},1}' {
    
  } {
    select-pane -RZ
  }
}

bind-key -n M-h if "$not_tmux" 'send-keys M-h' 'resize-pane -L 3'
bind-key -n M-j if "$not_tmux" 'send-keys M-j' 'resize-pane -D 3'
bind-key -n M-k if "$not_tmux" 'send-keys M-k' 'resize-pane -U 3'
bind-key -n M-l if "$not_tmux" 'send-keys M-l' 'resize-pane -R 3'

bind-key -n M-H if "$not_tmux" { send-keys M-H } {
  swap-pane -t '{left-of}'; select-pane -t '!'
}

bind-key -n M-J if "$not_tmux" { send-keys M-J } {
  swap-pane -t '{down-of}'; select-pane -t '!'
}

bind-key -n M-K if "$not_tmux" { send-keys M-K } {
  swap-pane -t '{up-of}'; select-pane -t '!'
}

bind-key -n M-L if "$not_tmux" { send-keys M-L } {
  swap-pane -t '{right-of}'; select-pane -t '!'
}

# bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'
# bind-key -T copy-mode-vi 'C-h' select-pane -L
# bind-key -T copy-mode-vi 'C-j' select-pane -D
# bind-key -T copy-mode-vi 'C-k' select-pane -U
# bind-key -T copy-mode-vi 'C-l' select-pane -R
# bind-key -T copy-mode-vi 'C-\' select-pane -l

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window
bind Tab last-window        # move to last active window

# -- copy mode -----------------------------------------------------------------

bind Enter copy-mode # enter copy mode


# -- buffers -------------------------------------------------------------------

bind b list-buffers  # list paste buffers
bind p paste-buffer  # paste from the top paste buffer
bind P choose-buffer # choose which buffer to paste from

# easily toggle synchronization (mnemonic: e is for echo
# sends input to all panes in a given window.
bind e setw synchronize-panes on
bind E setw synchronize-panes off

# -- statusline ----------------------------------------------------------------

base00="#161821" #Default Background
base01="#1e2029" #Lighter Background (Used for status bars, line number, etc.)
base02="#252731" #Selection Background
base03="#4b4e57" #Comments, Invisibles (The stuff you don't see)
base04="#5d6071" #Dark Foreground (Used for status bars)
base05="#c6c8d1" #Default Foreground, Caret, Delimiters, Operators
base06="#d8dee9" #Light Foreground (Not often used)
base07="#e5e9f0" #Light Background (Not often used)
base08="#e27878" #Variables, XML Tags, Markup Link Text, Markup Lists, Diff Deleted
base09="#d08770" #Integers, Boolean, Constants, XML Attributes, Markup Link Url
base0A="#ebcb8b" #Classes, Markup Bold, Search Text Background
base0B="#a3be8c" #Strings, Inherited Class, Markup Code, Diff Inserted
base0C="#88c0d0" #Support, Regular Expressions, Escape Characters, Markup Quotes
base0D="#81a1c1" #Functions, Methods, Attribute IDs, Headings
base0E="#b48ead" #Keywords, Storage, Selector, Markup Italic, Diff Changed
base0F="#bf616a" #Deprecated, Opening/Closing Embedded Language Tags, e.g. `<?php ?>`


# set my_bg     = $my_base00
# set my_black  = $my_base01
# set my_grey1  = $my_base02
# set my_grey2  = $my_base03
# set my_grey3  = $my_base04
# set my_fg     = $my_base05
# set my_white  = $my_base06
# set my_red    = $my_base08
# set my_orange = $my_base09
# set my_yellow = $my_base0A
# set my_green  = $my_base0B
# set my_cyan   = $my_base0C
# set my_blue   = $my_base0D
# set my_purple = $my_base0E
# set my_pink   = "#de878f"

set -g status-position bottom
set -g status 'on'
# set -g status-bg "$dark_gray"
set -g status-style "fg=${base04},bg=${base01}"
set -g status-justify 'left'
set -g status-left-length '100'
set -g status-right-length '100'

set -g message-style "fg=$base0B,bg=$base00"
set -g message-command-style "fg=$base0B,bg=$base00"

set -g pane-border-style "bg=$base00,fg=$base02"
set -g pane-active-border-style "bg=$base00,fg=$base02"

mode_separator=""
mode_separator2=""
tcb="#{?client_prefix,#[fg=$base0A],#{?pane_in_mode,#[fg=$base0A],#{?pane_synchronized,#[fg=$base0A],#[fg=$base0A]}}}"

set -g @mode_indicator_prefix_prompt " $tcb#[fg=$base0E] WAIT #[default]#[fg=$base03]$mode_separator"
set -g @mode_indicator_prefix_mode_style bg=$base03,fg=$base0E,bold
set -g @mode_indicator_copy_prompt " $tcb#[fg=$base0B] COPY #[default]#[fg=$base03]$mode_separator"
set -g @mode_indicator_copy_mode_style bg=$base03,fg=$base0B,bold
set -g @mode_indicator_sync_prompt " $tcb#[fg=$base08] SYNC #[default]#[fg=$base03]$mode_separator"
set -g @mode_indicator_sync_mode_style bg=$base03,fg=$base08,bold
set -g @mode_indicator_empty_prompt " $tcb#[fg=$base0C] TMUX #[default]#[fg=$base03]$mode_separator"
set -g @mode_indicator_empty_mode_style bg=$base03,fg=$base0C,bold

set -g @suspend_suspended_options " \
  @mode_indicator_custom_prompt:: ---- , \
  @mode_indicator_custom_mode_style::bg=brightblack\\,fg=black,"

setenv -g barscripts "$HOME/.config/tmux/scripts"

set -g status-left '#{tmux_mode_indicator}'
set -g status-right "#[default]#[fg=$base03]$mode_separator2#[fg=$base0E,bg=$base03] 󰘚#(#{barscripts}/cpu_info.sh) #[fg=$base0C]󰍛  #(#{barscripts}/ram_info.sh) #{?window_bell_flag,#[fg=$base09],#[fg=$base0D]}  #h "

set-option -g window-status-current-format "#[fg=$base0C, bg=$base01, bold] #I·#W"

set-option -g window-status-format "#{?#{||:#{window_bell_flag},#{window_activity_flag}},#[fg=$base01 bg=$base08],} #I·#W"
set-option -ag window-status-format "#[fg=$base04, bg=$base01, bold]"

# panes
set -g pane-border-style "fg=${base01} bg=${base00}"
set -g pane-active-border-style "bg=${base00} fg=${base0C}"

if "test ! -d ~/.config/tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.config/tmux/plugins/tpm && ~/.config/tmux/plugins/tpm/bin/install_plugins'"

run "$XDG_CONFIG_HOME/tmux/plugins/tpm/tpm"
